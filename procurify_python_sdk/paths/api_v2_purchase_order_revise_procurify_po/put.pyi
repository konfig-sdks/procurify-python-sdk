# coding: utf-8

"""
    Procurify API Documentation

     # Disclaimer  - Procurify’s API is evolving and is subject to change at any time. Additionally, aspects of the API are undocumented, including certain methods, events, and properties. Given that both documented and undocumented aspects of the Procurify API may change at any time, the client relies on the API at their own risk. - Client (and/or client’s representative) is responsible for building, testing, and maintaining any API connection between Procurify and any other tool.  Procurify’s responsibility strictly involves providing support on clarifications in regards to the issued API document. - Procurify’s API is offered on an “as is” and “as available” basis, without warranties of any kind. By accepting this agreement, you agree that you have read the current API documentation, and accept the API functionality in its current state including current limitations. For questions and clarification around the documentation, please contact support@procurify.com. - In accordance with Section 2.(b) of our Subscription Services Agreement, Procurify reserves the right to deny access to our API at any time. If your API requests are too large and time out, contact us immediately to avoid possible suspension of access. - You may not attempt to reverse engineer or otherwise derive source code, trade secrets, or know-how in the Procurify API or portion thereof. You may not use the Procurify API to replicate or compete with core products or services offered by Procurify. 

    Generated by: https://konfigthis.com
"""

from dataclasses import dataclass
import typing_extensions
import urllib3
from pydantic import RootModel
from procurify_python_sdk.request_before_hook import request_before_hook
import json
from urllib3._collections import HTTPHeaderDict

from procurify_python_sdk.api_response import AsyncGeneratorResponse
from procurify_python_sdk import api_client, exceptions
from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from procurify_python_sdk import schemas  # noqa: F401

from procurify_python_sdk.model.purchase_order_update_request import PurchaseOrderUpdateRequest as PurchaseOrderUpdateRequestSchema
from procurify_python_sdk.model.purchase_order_detail_serializer_single import PurchaseOrderDetailSerializerSingle as PurchaseOrderDetailSerializerSingleSchema
from procurify_python_sdk.model.purchase_order_update_request_custom_fields import PurchaseOrderUpdateRequestCustomFields as PurchaseOrderUpdateRequestCustomFieldsSchema
from procurify_python_sdk.model.purchase_order_update_request_discount import PurchaseOrderUpdateRequestDiscount as PurchaseOrderUpdateRequestDiscountSchema
from procurify_python_sdk.model.purchase_order_update_request_tax import PurchaseOrderUpdateRequestTax as PurchaseOrderUpdateRequestTaxSchema
from procurify_python_sdk.model.order_item_purchase_edit_request import OrderItemPurchaseEditRequest as OrderItemPurchaseEditRequestSchema

from procurify_python_sdk.type.order_item_purchase_edit_request import OrderItemPurchaseEditRequest
from procurify_python_sdk.type.purchase_order_update_request_tax import PurchaseOrderUpdateRequestTax
from procurify_python_sdk.type.purchase_order_update_request import PurchaseOrderUpdateRequest
from procurify_python_sdk.type.purchase_order_detail_serializer_single import PurchaseOrderDetailSerializerSingle
from procurify_python_sdk.type.purchase_order_update_request_custom_fields import PurchaseOrderUpdateRequestCustomFields
from procurify_python_sdk.type.purchase_order_update_request_discount import PurchaseOrderUpdateRequestDiscount

from ...api_client import Dictionary
from procurify_python_sdk.pydantic.purchase_order_update_request_discount import PurchaseOrderUpdateRequestDiscount as PurchaseOrderUpdateRequestDiscountPydantic
from procurify_python_sdk.pydantic.purchase_order_detail_serializer_single import PurchaseOrderDetailSerializerSingle as PurchaseOrderDetailSerializerSinglePydantic
from procurify_python_sdk.pydantic.purchase_order_update_request_tax import PurchaseOrderUpdateRequestTax as PurchaseOrderUpdateRequestTaxPydantic
from procurify_python_sdk.pydantic.order_item_purchase_edit_request import OrderItemPurchaseEditRequest as OrderItemPurchaseEditRequestPydantic
from procurify_python_sdk.pydantic.purchase_order_update_request import PurchaseOrderUpdateRequest as PurchaseOrderUpdateRequestPydantic
from procurify_python_sdk.pydantic.purchase_order_update_request_custom_fields import PurchaseOrderUpdateRequestCustomFields as PurchaseOrderUpdateRequestCustomFieldsPydantic

# Query params


class ConfirmDuplicateExternalPoNumberSchema(
    schemas.EnumBase,
    schemas.StrSchema
):
    
    @schemas.classproperty
    def FALSE(cls):
        return cls("False")
    
    @schemas.classproperty
    def TRUE(cls):
        return cls("True")


class FormatSchema(
    schemas.EnumBase,
    schemas.StrSchema
):
    
    @schemas.classproperty
    def CSV(cls):
        return cls("csv")
    
    @schemas.classproperty
    def JSON(cls):
        return cls("json")
RequestRequiredQueryParams = typing_extensions.TypedDict(
    'RequestRequiredQueryParams',
    {
    }
)
RequestOptionalQueryParams = typing_extensions.TypedDict(
    'RequestOptionalQueryParams',
    {
        'confirm_duplicate_external_po_number': typing.Union[ConfirmDuplicateExternalPoNumberSchema, str, ],
        'format': typing.Union[FormatSchema, str, ],
    },
    total=False
)


class RequestQueryParams(RequestRequiredQueryParams, RequestOptionalQueryParams):
    pass


request_query_confirm_duplicate_external_po_number = api_client.QueryParameter(
    name="confirm_duplicate_external_po_number",
    style=api_client.ParameterStyle.FORM,
    schema=ConfirmDuplicateExternalPoNumberSchema,
    explode=True,
)
request_query_format = api_client.QueryParameter(
    name="format",
    style=api_client.ParameterStyle.FORM,
    schema=FormatSchema,
    explode=True,
)
# Path params
ProcurifyPOSchema = schemas.IntSchema
RequestRequiredPathParams = typing_extensions.TypedDict(
    'RequestRequiredPathParams',
    {
        'procurify_PO': typing.Union[ProcurifyPOSchema, decimal.Decimal, int, ],
    }
)
RequestOptionalPathParams = typing_extensions.TypedDict(
    'RequestOptionalPathParams',
    {
    },
    total=False
)


class RequestPathParams(RequestRequiredPathParams, RequestOptionalPathParams):
    pass


request_path_procurify_po = api_client.PathParameter(
    name="procurify_PO",
    style=api_client.ParameterStyle.SIMPLE,
    schema=ProcurifyPOSchema,
    required=True,
)
# body param
SchemaForRequestBodyApplicationJson = PurchaseOrderUpdateRequestSchema
SchemaForRequestBodyApplicationXWwwFormUrlencoded = PurchaseOrderUpdateRequestSchema
SchemaForRequestBody = PurchaseOrderUpdateRequestSchema
SchemaForRequestBodyApplicationXml = PurchaseOrderUpdateRequestSchema
SchemaForRequestBodyMultipartFormData = PurchaseOrderUpdateRequestSchema


request_body_purchase_order_update_request = api_client.RequestBody(
    content={
        'application/json': api_client.MediaType(
            schema=SchemaForRequestBodyApplicationJson),
        'application/x-www-form-urlencoded': api_client.MediaType(
            schema=SchemaForRequestBodyApplicationXWwwFormUrlencoded),
        '': api_client.MediaType(
            schema=SchemaForRequestBody),
        'application/xml': api_client.MediaType(
            schema=SchemaForRequestBodyApplicationXml),
        'multipart/form-data': api_client.MediaType(
            schema=SchemaForRequestBodyMultipartFormData),
    },
    required=True,
)
SchemaFor200ResponseBodyApplicationJson = PurchaseOrderDetailSerializerSingleSchema
SchemaFor200ResponseBodyTextCsv = PurchaseOrderDetailSerializerSingleSchema


@dataclass
class ApiResponseFor200(api_client.ApiResponse):
    body: PurchaseOrderDetailSerializerSingle


@dataclass
class ApiResponseFor200Async(api_client.AsyncApiResponse):
    body: PurchaseOrderDetailSerializerSingle


_response_for_200 = api_client.OpenApiResponse(
    response_cls=ApiResponseFor200,
    response_cls_async=ApiResponseFor200Async,
    content={
        'application/json': api_client.MediaType(
            schema=SchemaFor200ResponseBodyApplicationJson),
        'text/csv': api_client.MediaType(
            schema=SchemaFor200ResponseBodyTextCsv),
    },
)
_all_accept_content_types = (
    'application/json',
    'text/csv',
)


class BaseApi(api_client.Api):

    def _revise_procurify_po_mapped_args(
        self,
        version: int,
        order_items: typing.List[OrderItemPurchaseEditRequest],
        buyer_name: str,
        buyer_contact: str,
        buyer_address_line_one: str,
        buyer_postal_code: str,
        buyer_city: str,
        buyer_country: str,
        buyer_address: int,
        receiver_name: str,
        receiver_contact: str,
        receiver_address_line_one: str,
        receiver_postal_code: str,
        receiver_city: str,
        receiver_country: str,
        receiver_address: int,
        promise_date: datetime,
        discount: PurchaseOrderUpdateRequestDiscount,
        tax: PurchaseOrderUpdateRequestTax,
        procurify_po: int,
        custom_fields: typing.Optional[PurchaseOrderUpdateRequestCustomFields] = None,
        po_num: typing.Optional[typing.Optional[str]] = None,
        buyer_state_province: typing.Optional[str] = None,
        comment: typing.Optional[typing.Optional[str]] = None,
        receiver_state_province: typing.Optional[str] = None,
        freight: typing.Optional[typing.Optional[str]] = None,
        other: typing.Optional[typing.Optional[str]] = None,
        disclaimer_description: typing.Optional[typing.Optional[str]] = None,
        disclaimer_text: typing.Optional[typing.Optional[str]] = None,
        payment_term_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_term_ref: typing.Optional[typing.Optional[int]] = None,
        payment_method_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_method_ref: typing.Optional[typing.Optional[int]] = None,
        creditcard: typing.Optional[typing.Optional[int]] = None,
        expiry_date: typing.Optional[typing.Optional[datetime]] = None,
        contract: typing.Optional[typing.Optional[int]] = None,
        confirm_duplicate_external_po_number: typing.Optional[str] = None,
        format: typing.Optional[str] = None,
    ) -> api_client.MappedArgs:
        args: api_client.MappedArgs = api_client.MappedArgs()
        _query_params = {}
        _path_params = {}
        _body = {}
        if version is not None:
            _body["version"] = version
        if order_items is not None:
            _body["order_items"] = order_items
        if custom_fields is not None:
            _body["custom_fields"] = custom_fields
        if po_num is not None:
            _body["PO_Num"] = po_num
        if buyer_name is not None:
            _body["buyer_name"] = buyer_name
        if buyer_contact is not None:
            _body["buyer_contact"] = buyer_contact
        if buyer_address_line_one is not None:
            _body["buyer_addressLineOne"] = buyer_address_line_one
        if buyer_postal_code is not None:
            _body["buyer_postalCode"] = buyer_postal_code
        if buyer_city is not None:
            _body["buyer_city"] = buyer_city
        if buyer_state_province is not None:
            _body["buyer_state_province"] = buyer_state_province
        if buyer_country is not None:
            _body["buyer_country"] = buyer_country
        if buyer_address is not None:
            _body["buyer_address"] = buyer_address
        if comment is not None:
            _body["comment"] = comment
        if receiver_name is not None:
            _body["receiver_name"] = receiver_name
        if receiver_contact is not None:
            _body["receiver_contact"] = receiver_contact
        if receiver_address_line_one is not None:
            _body["receiver_addressLineOne"] = receiver_address_line_one
        if receiver_postal_code is not None:
            _body["receiver_postalCode"] = receiver_postal_code
        if receiver_city is not None:
            _body["receiver_city"] = receiver_city
        if receiver_state_province is not None:
            _body["receiver_state_province"] = receiver_state_province
        if receiver_country is not None:
            _body["receiver_country"] = receiver_country
        if receiver_address is not None:
            _body["receiver_address"] = receiver_address
        if promise_date is not None:
            _body["promise_date"] = promise_date
        if freight is not None:
            _body["freight"] = freight
        if discount is not None:
            _body["discount"] = discount
        if tax is not None:
            _body["tax"] = tax
        if other is not None:
            _body["other"] = other
        if disclaimer_description is not None:
            _body["disclaimer_description"] = disclaimer_description
        if disclaimer_text is not None:
            _body["disclaimer_text"] = disclaimer_text
        if payment_term_ref is not None:
            _body["payment_term_ref"] = payment_term_ref
        if shipping_term_ref is not None:
            _body["shipping_term_ref"] = shipping_term_ref
        if payment_method_ref is not None:
            _body["payment_method_ref"] = payment_method_ref
        if shipping_method_ref is not None:
            _body["shipping_method_ref"] = shipping_method_ref
        if creditcard is not None:
            _body["creditcard"] = creditcard
        if expiry_date is not None:
            _body["expiry_date"] = expiry_date
        if contract is not None:
            _body["contract"] = contract
        args.body = _body
        if confirm_duplicate_external_po_number is not None:
            _query_params["confirm_duplicate_external_po_number"] = confirm_duplicate_external_po_number
        if format is not None:
            _query_params["format"] = format
        if procurify_po is not None:
            _path_params["procurify_PO"] = procurify_po
        args.query = _query_params
        args.path = _path_params
        return args

    async def _arevise_procurify_po_oapg(
        self,
        body: typing.Any = None,
            query_params: typing.Optional[dict] = {},
            path_params: typing.Optional[dict] = {},
        skip_deserialization: bool = True,
        timeout: typing.Optional[typing.Union[float, typing.Tuple]] = None,
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        content_type: str = 'application/json',
        stream: bool = False,
        **kwargs,
    ) -> typing.Union[
        ApiResponseFor200Async,
        api_client.ApiResponseWithoutDeserializationAsync,
        AsyncGeneratorResponse,
    ]:
        """
        Revise a Purchase Order
        :param skip_deserialization: If true then api_response.response will be set but
            api_response.body and api_response.headers will not be deserialized into schema
            class instances
        """
        self._verify_typed_dict_inputs_oapg(RequestQueryParams, query_params)
        self._verify_typed_dict_inputs_oapg(RequestPathParams, path_params)
        used_path = path.value
    
        _path_params = {}
        for parameter in (
            request_path_procurify_po,
        ):
            parameter_data = path_params.get(parameter.name, schemas.unset)
            if parameter_data is schemas.unset:
                continue
            serialized_data = parameter.serialize(parameter_data)
            _path_params.update(serialized_data)
    
        for k, v in _path_params.items():
            used_path = used_path.replace('{%s}' % k, v)
    
        prefix_separator_iterator = None
        for parameter in (
            request_query_confirm_duplicate_external_po_number,
            request_query_format,
        ):
            parameter_data = query_params.get(parameter.name, schemas.unset)
            if parameter_data is schemas.unset:
                continue
            if prefix_separator_iterator is None:
                prefix_separator_iterator = parameter.get_prefix_separator_iterator()
            serialized_data = parameter.serialize(parameter_data, prefix_separator_iterator)
            for serialized_value in serialized_data.values():
                used_path += serialized_value
    
        _headers = HTTPHeaderDict()
        # TODO add cookie handling
        if accept_content_types:
            for accept_content_type in accept_content_types:
                _headers.add('Accept', accept_content_type)
        method = 'put'.upper()
        _headers.add('Content-Type', content_type)
    
        if body is schemas.unset:
            raise exceptions.ApiValueError(
                'The required body parameter has an invalid value of: unset. Set a valid value instead')
        _fields = None
        _body = None
        request_before_hook(
            resource_path=used_path,
            method=method,
            configuration=self.api_client.configuration,
            path_template='/api/v2/purchase_order/revise/{procurify_PO}',
            body=body,
            auth_settings=_auth,
            headers=_headers,
        )
        serialized_data = request_body_purchase_order_update_request.serialize(body, content_type)
        if 'fields' in serialized_data:
            _fields = serialized_data['fields']
        elif 'body' in serialized_data:
            _body = serialized_data['body']
    
        response = await self.api_client.async_call_api(
            resource_path=used_path,
            method=method,
            headers=_headers,
            fields=_fields,
            serialized_body=_body,
            body=body,
            auth_settings=_auth,
            prefix_separator_iterator=prefix_separator_iterator,
            timeout=timeout,
            **kwargs
        )
    
        if stream:
            if not 200 <= response.http_response.status <= 299:
                body = (await response.http_response.content.read()).decode("utf-8")
                raise exceptions.ApiStreamingException(
                    status=response.http_response.status,
                    reason=response.http_response.reason,
                    body=body,
                )
    
            async def stream_iterator():
                """
                iterates over response.http_response.content and closes connection once iteration has finished
                """
                async for line in response.http_response.content:
                    if line == b'\r\n':
                        continue
                    yield line
                response.http_response.close()
                await response.session.close()
            return AsyncGeneratorResponse(
                content=stream_iterator(),
                headers=response.http_response.headers,
                status=response.http_response.status,
                response=response.http_response
            )
    
        response_for_status = _status_code_to_response.get(str(response.http_response.status))
        if response_for_status:
            api_response = await response_for_status.deserialize_async(
                                                    response,
                                                    self.api_client.configuration,
                                                    skip_deserialization=skip_deserialization
                                                )
        else:
            # If response data is JSON then deserialize for SDK consumer convenience
            is_json = api_client.JSONDetector._content_type_is_json(response.http_response.headers.get('Content-Type', ''))
            api_response = api_client.ApiResponseWithoutDeserializationAsync(
                body=await response.http_response.json() if is_json else await response.http_response.text(),
                response=response.http_response,
                round_trip_time=response.round_trip_time,
                status=response.http_response.status,
                headers=response.http_response.headers,
            )
    
        if not 200 <= api_response.status <= 299:
            raise exceptions.ApiException(api_response=api_response)
    
        # cleanup session / response
        response.http_response.close()
        await response.session.close()
    
        return api_response


    def _revise_procurify_po_oapg(
        self,
        body: typing.Any = None,
            query_params: typing.Optional[dict] = {},
            path_params: typing.Optional[dict] = {},
        skip_deserialization: bool = True,
        timeout: typing.Optional[typing.Union[float, typing.Tuple]] = None,
        accept_content_types: typing.Tuple[str] = _all_accept_content_types,
        content_type: str = 'application/json',
        stream: bool = False,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]:
        """
        Revise a Purchase Order
        :param skip_deserialization: If true then api_response.response will be set but
            api_response.body and api_response.headers will not be deserialized into schema
            class instances
        """
        self._verify_typed_dict_inputs_oapg(RequestQueryParams, query_params)
        self._verify_typed_dict_inputs_oapg(RequestPathParams, path_params)
        used_path = path.value
    
        _path_params = {}
        for parameter in (
            request_path_procurify_po,
        ):
            parameter_data = path_params.get(parameter.name, schemas.unset)
            if parameter_data is schemas.unset:
                continue
            serialized_data = parameter.serialize(parameter_data)
            _path_params.update(serialized_data)
    
        for k, v in _path_params.items():
            used_path = used_path.replace('{%s}' % k, v)
    
        prefix_separator_iterator = None
        for parameter in (
            request_query_confirm_duplicate_external_po_number,
            request_query_format,
        ):
            parameter_data = query_params.get(parameter.name, schemas.unset)
            if parameter_data is schemas.unset:
                continue
            if prefix_separator_iterator is None:
                prefix_separator_iterator = parameter.get_prefix_separator_iterator()
            serialized_data = parameter.serialize(parameter_data, prefix_separator_iterator)
            for serialized_value in serialized_data.values():
                used_path += serialized_value
    
        _headers = HTTPHeaderDict()
        # TODO add cookie handling
        if accept_content_types:
            for accept_content_type in accept_content_types:
                _headers.add('Accept', accept_content_type)
        method = 'put'.upper()
        _headers.add('Content-Type', content_type)
    
        if body is schemas.unset:
            raise exceptions.ApiValueError(
                'The required body parameter has an invalid value of: unset. Set a valid value instead')
        _fields = None
        _body = None
        request_before_hook(
            resource_path=used_path,
            method=method,
            configuration=self.api_client.configuration,
            path_template='/api/v2/purchase_order/revise/{procurify_PO}',
            body=body,
            auth_settings=_auth,
            headers=_headers,
        )
        serialized_data = request_body_purchase_order_update_request.serialize(body, content_type)
        if 'fields' in serialized_data:
            _fields = serialized_data['fields']
        elif 'body' in serialized_data:
            _body = serialized_data['body']
    
        response = self.api_client.call_api(
            resource_path=used_path,
            method=method,
            headers=_headers,
            fields=_fields,
            serialized_body=_body,
            body=body,
            auth_settings=_auth,
            prefix_separator_iterator=prefix_separator_iterator,
            timeout=timeout,
        )
    
        response_for_status = _status_code_to_response.get(str(response.http_response.status))
        if response_for_status:
            api_response = response_for_status.deserialize(
                                                    response,
                                                    self.api_client.configuration,
                                                    skip_deserialization=skip_deserialization
                                                )
        else:
            # If response data is JSON then deserialize for SDK consumer convenience
            is_json = api_client.JSONDetector._content_type_is_json(response.http_response.headers.get('Content-Type', ''))
            api_response = api_client.ApiResponseWithoutDeserialization(
                body=json.loads(response.http_response.data) if is_json else response.http_response.data,
                response=response.http_response,
                round_trip_time=response.round_trip_time,
                status=response.http_response.status,
                headers=response.http_response.headers,
            )
    
        if not 200 <= api_response.status <= 299:
            raise exceptions.ApiException(api_response=api_response)
    
        return api_response


class ReviseProcurifyPoRaw(BaseApi):
    # this class is used by api classes that refer to endpoints with operationId fn names

    @api_client.DeprecationWarningOnce(prefix="purchase_orders")
    async def arevise_procurify_po(
        self,
        version: int,
        order_items: typing.List[OrderItemPurchaseEditRequest],
        buyer_name: str,
        buyer_contact: str,
        buyer_address_line_one: str,
        buyer_postal_code: str,
        buyer_city: str,
        buyer_country: str,
        buyer_address: int,
        receiver_name: str,
        receiver_contact: str,
        receiver_address_line_one: str,
        receiver_postal_code: str,
        receiver_city: str,
        receiver_country: str,
        receiver_address: int,
        promise_date: datetime,
        discount: PurchaseOrderUpdateRequestDiscount,
        tax: PurchaseOrderUpdateRequestTax,
        procurify_po: int,
        custom_fields: typing.Optional[PurchaseOrderUpdateRequestCustomFields] = None,
        po_num: typing.Optional[typing.Optional[str]] = None,
        buyer_state_province: typing.Optional[str] = None,
        comment: typing.Optional[typing.Optional[str]] = None,
        receiver_state_province: typing.Optional[str] = None,
        freight: typing.Optional[typing.Optional[str]] = None,
        other: typing.Optional[typing.Optional[str]] = None,
        disclaimer_description: typing.Optional[typing.Optional[str]] = None,
        disclaimer_text: typing.Optional[typing.Optional[str]] = None,
        payment_term_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_term_ref: typing.Optional[typing.Optional[int]] = None,
        payment_method_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_method_ref: typing.Optional[typing.Optional[int]] = None,
        creditcard: typing.Optional[typing.Optional[int]] = None,
        expiry_date: typing.Optional[typing.Optional[datetime]] = None,
        contract: typing.Optional[typing.Optional[int]] = None,
        confirm_duplicate_external_po_number: typing.Optional[str] = None,
        format: typing.Optional[str] = None,
        **kwargs,
    ) -> typing.Union[
        ApiResponseFor200Async,
        api_client.ApiResponseWithoutDeserializationAsync,
        AsyncGeneratorResponse,
    ]:
        args = self._revise_procurify_po_mapped_args(
            version=version,
            order_items=order_items,
            buyer_name=buyer_name,
            buyer_contact=buyer_contact,
            buyer_address_line_one=buyer_address_line_one,
            buyer_postal_code=buyer_postal_code,
            buyer_city=buyer_city,
            buyer_country=buyer_country,
            buyer_address=buyer_address,
            receiver_name=receiver_name,
            receiver_contact=receiver_contact,
            receiver_address_line_one=receiver_address_line_one,
            receiver_postal_code=receiver_postal_code,
            receiver_city=receiver_city,
            receiver_country=receiver_country,
            receiver_address=receiver_address,
            promise_date=promise_date,
            discount=discount,
            tax=tax,
            procurify_po=procurify_po,
            custom_fields=custom_fields,
            po_num=po_num,
            buyer_state_province=buyer_state_province,
            comment=comment,
            receiver_state_province=receiver_state_province,
            freight=freight,
            other=other,
            disclaimer_description=disclaimer_description,
            disclaimer_text=disclaimer_text,
            payment_term_ref=payment_term_ref,
            shipping_term_ref=shipping_term_ref,
            payment_method_ref=payment_method_ref,
            shipping_method_ref=shipping_method_ref,
            creditcard=creditcard,
            expiry_date=expiry_date,
            contract=contract,
            confirm_duplicate_external_po_number=confirm_duplicate_external_po_number,
            format=format,
        )
        return await self._arevise_procurify_po_oapg(
            body=args.body,
            query_params=args.query,
            path_params=args.path,
            **kwargs,
        )
    
    @api_client.DeprecationWarningOnce(prefix="purchase_orders")
    def revise_procurify_po(
        self,
        version: int,
        order_items: typing.List[OrderItemPurchaseEditRequest],
        buyer_name: str,
        buyer_contact: str,
        buyer_address_line_one: str,
        buyer_postal_code: str,
        buyer_city: str,
        buyer_country: str,
        buyer_address: int,
        receiver_name: str,
        receiver_contact: str,
        receiver_address_line_one: str,
        receiver_postal_code: str,
        receiver_city: str,
        receiver_country: str,
        receiver_address: int,
        promise_date: datetime,
        discount: PurchaseOrderUpdateRequestDiscount,
        tax: PurchaseOrderUpdateRequestTax,
        procurify_po: int,
        custom_fields: typing.Optional[PurchaseOrderUpdateRequestCustomFields] = None,
        po_num: typing.Optional[typing.Optional[str]] = None,
        buyer_state_province: typing.Optional[str] = None,
        comment: typing.Optional[typing.Optional[str]] = None,
        receiver_state_province: typing.Optional[str] = None,
        freight: typing.Optional[typing.Optional[str]] = None,
        other: typing.Optional[typing.Optional[str]] = None,
        disclaimer_description: typing.Optional[typing.Optional[str]] = None,
        disclaimer_text: typing.Optional[typing.Optional[str]] = None,
        payment_term_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_term_ref: typing.Optional[typing.Optional[int]] = None,
        payment_method_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_method_ref: typing.Optional[typing.Optional[int]] = None,
        creditcard: typing.Optional[typing.Optional[int]] = None,
        expiry_date: typing.Optional[typing.Optional[datetime]] = None,
        contract: typing.Optional[typing.Optional[int]] = None,
        confirm_duplicate_external_po_number: typing.Optional[str] = None,
        format: typing.Optional[str] = None,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]:
        args = self._revise_procurify_po_mapped_args(
            version=version,
            order_items=order_items,
            buyer_name=buyer_name,
            buyer_contact=buyer_contact,
            buyer_address_line_one=buyer_address_line_one,
            buyer_postal_code=buyer_postal_code,
            buyer_city=buyer_city,
            buyer_country=buyer_country,
            buyer_address=buyer_address,
            receiver_name=receiver_name,
            receiver_contact=receiver_contact,
            receiver_address_line_one=receiver_address_line_one,
            receiver_postal_code=receiver_postal_code,
            receiver_city=receiver_city,
            receiver_country=receiver_country,
            receiver_address=receiver_address,
            promise_date=promise_date,
            discount=discount,
            tax=tax,
            procurify_po=procurify_po,
            custom_fields=custom_fields,
            po_num=po_num,
            buyer_state_province=buyer_state_province,
            comment=comment,
            receiver_state_province=receiver_state_province,
            freight=freight,
            other=other,
            disclaimer_description=disclaimer_description,
            disclaimer_text=disclaimer_text,
            payment_term_ref=payment_term_ref,
            shipping_term_ref=shipping_term_ref,
            payment_method_ref=payment_method_ref,
            shipping_method_ref=shipping_method_ref,
            creditcard=creditcard,
            expiry_date=expiry_date,
            contract=contract,
            confirm_duplicate_external_po_number=confirm_duplicate_external_po_number,
            format=format,
        )
        return self._revise_procurify_po_oapg(
            body=args.body,
            query_params=args.query,
            path_params=args.path,
        )

class ReviseProcurifyPo(BaseApi):

    @api_client.DeprecationWarningOnce(prefix="purchase_orders")
    async def arevise_procurify_po(
        self,
        version: int,
        order_items: typing.List[OrderItemPurchaseEditRequest],
        buyer_name: str,
        buyer_contact: str,
        buyer_address_line_one: str,
        buyer_postal_code: str,
        buyer_city: str,
        buyer_country: str,
        buyer_address: int,
        receiver_name: str,
        receiver_contact: str,
        receiver_address_line_one: str,
        receiver_postal_code: str,
        receiver_city: str,
        receiver_country: str,
        receiver_address: int,
        promise_date: datetime,
        discount: PurchaseOrderUpdateRequestDiscount,
        tax: PurchaseOrderUpdateRequestTax,
        procurify_po: int,
        custom_fields: typing.Optional[PurchaseOrderUpdateRequestCustomFields] = None,
        po_num: typing.Optional[typing.Optional[str]] = None,
        buyer_state_province: typing.Optional[str] = None,
        comment: typing.Optional[typing.Optional[str]] = None,
        receiver_state_province: typing.Optional[str] = None,
        freight: typing.Optional[typing.Optional[str]] = None,
        other: typing.Optional[typing.Optional[str]] = None,
        disclaimer_description: typing.Optional[typing.Optional[str]] = None,
        disclaimer_text: typing.Optional[typing.Optional[str]] = None,
        payment_term_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_term_ref: typing.Optional[typing.Optional[int]] = None,
        payment_method_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_method_ref: typing.Optional[typing.Optional[int]] = None,
        creditcard: typing.Optional[typing.Optional[int]] = None,
        expiry_date: typing.Optional[typing.Optional[datetime]] = None,
        contract: typing.Optional[typing.Optional[int]] = None,
        confirm_duplicate_external_po_number: typing.Optional[str] = None,
        format: typing.Optional[str] = None,
        validate: bool = False,
        **kwargs,
    ) -> PurchaseOrderDetailSerializerSinglePydantic:
        raw_response = await self.raw.arevise_procurify_po(
            version=version,
            order_items=order_items,
            buyer_name=buyer_name,
            buyer_contact=buyer_contact,
            buyer_address_line_one=buyer_address_line_one,
            buyer_postal_code=buyer_postal_code,
            buyer_city=buyer_city,
            buyer_country=buyer_country,
            buyer_address=buyer_address,
            receiver_name=receiver_name,
            receiver_contact=receiver_contact,
            receiver_address_line_one=receiver_address_line_one,
            receiver_postal_code=receiver_postal_code,
            receiver_city=receiver_city,
            receiver_country=receiver_country,
            receiver_address=receiver_address,
            promise_date=promise_date,
            discount=discount,
            tax=tax,
            procurify_po=procurify_po,
            custom_fields=custom_fields,
            po_num=po_num,
            buyer_state_province=buyer_state_province,
            comment=comment,
            receiver_state_province=receiver_state_province,
            freight=freight,
            other=other,
            disclaimer_description=disclaimer_description,
            disclaimer_text=disclaimer_text,
            payment_term_ref=payment_term_ref,
            shipping_term_ref=shipping_term_ref,
            payment_method_ref=payment_method_ref,
            shipping_method_ref=shipping_method_ref,
            creditcard=creditcard,
            expiry_date=expiry_date,
            contract=contract,
            confirm_duplicate_external_po_number=confirm_duplicate_external_po_number,
            format=format,
            **kwargs,
        )
        if validate:
            return PurchaseOrderDetailSerializerSinglePydantic(**raw_response.body)
        return api_client.construct_model_instance(PurchaseOrderDetailSerializerSinglePydantic, raw_response.body)
    
    
    @api_client.DeprecationWarningOnce(prefix="purchase_orders")
    def revise_procurify_po(
        self,
        version: int,
        order_items: typing.List[OrderItemPurchaseEditRequest],
        buyer_name: str,
        buyer_contact: str,
        buyer_address_line_one: str,
        buyer_postal_code: str,
        buyer_city: str,
        buyer_country: str,
        buyer_address: int,
        receiver_name: str,
        receiver_contact: str,
        receiver_address_line_one: str,
        receiver_postal_code: str,
        receiver_city: str,
        receiver_country: str,
        receiver_address: int,
        promise_date: datetime,
        discount: PurchaseOrderUpdateRequestDiscount,
        tax: PurchaseOrderUpdateRequestTax,
        procurify_po: int,
        custom_fields: typing.Optional[PurchaseOrderUpdateRequestCustomFields] = None,
        po_num: typing.Optional[typing.Optional[str]] = None,
        buyer_state_province: typing.Optional[str] = None,
        comment: typing.Optional[typing.Optional[str]] = None,
        receiver_state_province: typing.Optional[str] = None,
        freight: typing.Optional[typing.Optional[str]] = None,
        other: typing.Optional[typing.Optional[str]] = None,
        disclaimer_description: typing.Optional[typing.Optional[str]] = None,
        disclaimer_text: typing.Optional[typing.Optional[str]] = None,
        payment_term_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_term_ref: typing.Optional[typing.Optional[int]] = None,
        payment_method_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_method_ref: typing.Optional[typing.Optional[int]] = None,
        creditcard: typing.Optional[typing.Optional[int]] = None,
        expiry_date: typing.Optional[typing.Optional[datetime]] = None,
        contract: typing.Optional[typing.Optional[int]] = None,
        confirm_duplicate_external_po_number: typing.Optional[str] = None,
        format: typing.Optional[str] = None,
        validate: bool = False,
    ) -> PurchaseOrderDetailSerializerSinglePydantic:
        raw_response = self.raw.revise_procurify_po(
            version=version,
            order_items=order_items,
            buyer_name=buyer_name,
            buyer_contact=buyer_contact,
            buyer_address_line_one=buyer_address_line_one,
            buyer_postal_code=buyer_postal_code,
            buyer_city=buyer_city,
            buyer_country=buyer_country,
            buyer_address=buyer_address,
            receiver_name=receiver_name,
            receiver_contact=receiver_contact,
            receiver_address_line_one=receiver_address_line_one,
            receiver_postal_code=receiver_postal_code,
            receiver_city=receiver_city,
            receiver_country=receiver_country,
            receiver_address=receiver_address,
            promise_date=promise_date,
            discount=discount,
            tax=tax,
            procurify_po=procurify_po,
            custom_fields=custom_fields,
            po_num=po_num,
            buyer_state_province=buyer_state_province,
            comment=comment,
            receiver_state_province=receiver_state_province,
            freight=freight,
            other=other,
            disclaimer_description=disclaimer_description,
            disclaimer_text=disclaimer_text,
            payment_term_ref=payment_term_ref,
            shipping_term_ref=shipping_term_ref,
            payment_method_ref=payment_method_ref,
            shipping_method_ref=shipping_method_ref,
            creditcard=creditcard,
            expiry_date=expiry_date,
            contract=contract,
            confirm_duplicate_external_po_number=confirm_duplicate_external_po_number,
            format=format,
        )
        if validate:
            return PurchaseOrderDetailSerializerSinglePydantic(**raw_response.body)
        return api_client.construct_model_instance(PurchaseOrderDetailSerializerSinglePydantic, raw_response.body)


class ApiForput(BaseApi):
    # this class is used by api classes that refer to endpoints by path and http method names

    @api_client.DeprecationWarningOnce(prefix="purchase_orders")
    async def aput(
        self,
        version: int,
        order_items: typing.List[OrderItemPurchaseEditRequest],
        buyer_name: str,
        buyer_contact: str,
        buyer_address_line_one: str,
        buyer_postal_code: str,
        buyer_city: str,
        buyer_country: str,
        buyer_address: int,
        receiver_name: str,
        receiver_contact: str,
        receiver_address_line_one: str,
        receiver_postal_code: str,
        receiver_city: str,
        receiver_country: str,
        receiver_address: int,
        promise_date: datetime,
        discount: PurchaseOrderUpdateRequestDiscount,
        tax: PurchaseOrderUpdateRequestTax,
        procurify_po: int,
        custom_fields: typing.Optional[PurchaseOrderUpdateRequestCustomFields] = None,
        po_num: typing.Optional[typing.Optional[str]] = None,
        buyer_state_province: typing.Optional[str] = None,
        comment: typing.Optional[typing.Optional[str]] = None,
        receiver_state_province: typing.Optional[str] = None,
        freight: typing.Optional[typing.Optional[str]] = None,
        other: typing.Optional[typing.Optional[str]] = None,
        disclaimer_description: typing.Optional[typing.Optional[str]] = None,
        disclaimer_text: typing.Optional[typing.Optional[str]] = None,
        payment_term_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_term_ref: typing.Optional[typing.Optional[int]] = None,
        payment_method_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_method_ref: typing.Optional[typing.Optional[int]] = None,
        creditcard: typing.Optional[typing.Optional[int]] = None,
        expiry_date: typing.Optional[typing.Optional[datetime]] = None,
        contract: typing.Optional[typing.Optional[int]] = None,
        confirm_duplicate_external_po_number: typing.Optional[str] = None,
        format: typing.Optional[str] = None,
        **kwargs,
    ) -> typing.Union[
        ApiResponseFor200Async,
        api_client.ApiResponseWithoutDeserializationAsync,
        AsyncGeneratorResponse,
    ]:
        args = self._revise_procurify_po_mapped_args(
            version=version,
            order_items=order_items,
            buyer_name=buyer_name,
            buyer_contact=buyer_contact,
            buyer_address_line_one=buyer_address_line_one,
            buyer_postal_code=buyer_postal_code,
            buyer_city=buyer_city,
            buyer_country=buyer_country,
            buyer_address=buyer_address,
            receiver_name=receiver_name,
            receiver_contact=receiver_contact,
            receiver_address_line_one=receiver_address_line_one,
            receiver_postal_code=receiver_postal_code,
            receiver_city=receiver_city,
            receiver_country=receiver_country,
            receiver_address=receiver_address,
            promise_date=promise_date,
            discount=discount,
            tax=tax,
            procurify_po=procurify_po,
            custom_fields=custom_fields,
            po_num=po_num,
            buyer_state_province=buyer_state_province,
            comment=comment,
            receiver_state_province=receiver_state_province,
            freight=freight,
            other=other,
            disclaimer_description=disclaimer_description,
            disclaimer_text=disclaimer_text,
            payment_term_ref=payment_term_ref,
            shipping_term_ref=shipping_term_ref,
            payment_method_ref=payment_method_ref,
            shipping_method_ref=shipping_method_ref,
            creditcard=creditcard,
            expiry_date=expiry_date,
            contract=contract,
            confirm_duplicate_external_po_number=confirm_duplicate_external_po_number,
            format=format,
        )
        return await self._arevise_procurify_po_oapg(
            body=args.body,
            query_params=args.query,
            path_params=args.path,
            **kwargs,
        )
    
    @api_client.DeprecationWarningOnce(prefix="purchase_orders")
    def put(
        self,
        version: int,
        order_items: typing.List[OrderItemPurchaseEditRequest],
        buyer_name: str,
        buyer_contact: str,
        buyer_address_line_one: str,
        buyer_postal_code: str,
        buyer_city: str,
        buyer_country: str,
        buyer_address: int,
        receiver_name: str,
        receiver_contact: str,
        receiver_address_line_one: str,
        receiver_postal_code: str,
        receiver_city: str,
        receiver_country: str,
        receiver_address: int,
        promise_date: datetime,
        discount: PurchaseOrderUpdateRequestDiscount,
        tax: PurchaseOrderUpdateRequestTax,
        procurify_po: int,
        custom_fields: typing.Optional[PurchaseOrderUpdateRequestCustomFields] = None,
        po_num: typing.Optional[typing.Optional[str]] = None,
        buyer_state_province: typing.Optional[str] = None,
        comment: typing.Optional[typing.Optional[str]] = None,
        receiver_state_province: typing.Optional[str] = None,
        freight: typing.Optional[typing.Optional[str]] = None,
        other: typing.Optional[typing.Optional[str]] = None,
        disclaimer_description: typing.Optional[typing.Optional[str]] = None,
        disclaimer_text: typing.Optional[typing.Optional[str]] = None,
        payment_term_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_term_ref: typing.Optional[typing.Optional[int]] = None,
        payment_method_ref: typing.Optional[typing.Optional[int]] = None,
        shipping_method_ref: typing.Optional[typing.Optional[int]] = None,
        creditcard: typing.Optional[typing.Optional[int]] = None,
        expiry_date: typing.Optional[typing.Optional[datetime]] = None,
        contract: typing.Optional[typing.Optional[int]] = None,
        confirm_duplicate_external_po_number: typing.Optional[str] = None,
        format: typing.Optional[str] = None,
    ) -> typing.Union[
        ApiResponseFor200,
        api_client.ApiResponseWithoutDeserialization,
    ]:
        args = self._revise_procurify_po_mapped_args(
            version=version,
            order_items=order_items,
            buyer_name=buyer_name,
            buyer_contact=buyer_contact,
            buyer_address_line_one=buyer_address_line_one,
            buyer_postal_code=buyer_postal_code,
            buyer_city=buyer_city,
            buyer_country=buyer_country,
            buyer_address=buyer_address,
            receiver_name=receiver_name,
            receiver_contact=receiver_contact,
            receiver_address_line_one=receiver_address_line_one,
            receiver_postal_code=receiver_postal_code,
            receiver_city=receiver_city,
            receiver_country=receiver_country,
            receiver_address=receiver_address,
            promise_date=promise_date,
            discount=discount,
            tax=tax,
            procurify_po=procurify_po,
            custom_fields=custom_fields,
            po_num=po_num,
            buyer_state_province=buyer_state_province,
            comment=comment,
            receiver_state_province=receiver_state_province,
            freight=freight,
            other=other,
            disclaimer_description=disclaimer_description,
            disclaimer_text=disclaimer_text,
            payment_term_ref=payment_term_ref,
            shipping_term_ref=shipping_term_ref,
            payment_method_ref=payment_method_ref,
            shipping_method_ref=shipping_method_ref,
            creditcard=creditcard,
            expiry_date=expiry_date,
            contract=contract,
            confirm_duplicate_external_po_number=confirm_duplicate_external_po_number,
            format=format,
        )
        return self._revise_procurify_po_oapg(
            body=args.body,
            query_params=args.query,
            path_params=args.path,
        )

