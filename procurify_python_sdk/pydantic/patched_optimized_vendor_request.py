# coding: utf-8

"""
    Procurify API Documentation

     # Disclaimer  - Procurify’s API is evolving and is subject to change at any time. Additionally, aspects of the API are undocumented, including certain methods, events, and properties. Given that both documented and undocumented aspects of the Procurify API may change at any time, the client relies on the API at their own risk. - Client (and/or client’s representative) is responsible for building, testing, and maintaining any API connection between Procurify and any other tool.  Procurify’s responsibility strictly involves providing support on clarifications in regards to the issued API document. - Procurify’s API is offered on an “as is” and “as available” basis, without warranties of any kind. By accepting this agreement, you agree that you have read the current API documentation, and accept the API functionality in its current state including current limitations. For questions and clarification around the documentation, please contact support@procurify.com. - In accordance with Section 2.(b) of our Subscription Services Agreement, Procurify reserves the right to deny access to our API at any time. If your API requests are too large and time out, contact us immediately to avoid possible suspension of access. - You may not attempt to reverse engineer or otherwise derive source code, trade secrets, or know-how in the Procurify API or portion thereof. You may not use the Procurify API to replicate or compete with core products or services offered by Procurify. 

    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from procurify_python_sdk.pydantic.patched_optimized_vendor_request_email import PatchedOptimizedVendorRequestEmail
from procurify_python_sdk.pydantic.payment_method_request_nullable import PaymentMethodRequestNullable
from procurify_python_sdk.pydantic.payment_term_request_nullable import PaymentTermRequestNullable
from procurify_python_sdk.pydantic.shipping_method_request_nullable import ShippingMethodRequestNullable
from procurify_python_sdk.pydantic.shipping_term_request_nullable import ShippingTermRequestNullable
from procurify_python_sdk.pydantic.vendor_type_enum import VendorTypeEnum

class PatchedOptimizedVendorRequest(BaseModel):
    # Name of the vendor
    name: typing.Optional[str] = Field(None, alias='name')

    active: typing.Optional[bool] = Field(None, alias='active')

    # First line of address
    address_line_one: typing.Optional[typing.Optional[str]] = Field(None, alias='addressLineOne')

    # Second line of address
    address_line_two: typing.Optional[typing.Optional[str]] = Field(None, alias='addressLineTwo')

    # Postal or Zip code of the vendor
    postal_code: typing.Optional[typing.Optional[str]] = Field(None, alias='postalCode')

    # City of the vendor
    city: typing.Optional[typing.Optional[str]] = Field(None, alias='city')

    # State or Province of the vendor
    state_province: typing.Optional[typing.Optional[str]] = Field(None, alias='state_province')

    # Country of the vendor
    country: typing.Optional[typing.Optional[str]] = Field(None, alias='country')

    # Primary phone no. of the vendor
    phone_one: typing.Optional[typing.Optional[str]] = Field(None, alias='phoneOne')

    # Secondary phone no. of the vendor
    phone_two: typing.Optional[typing.Optional[str]] = Field(None, alias='phoneTwo')

    # Fax no. of the vendor
    fax: typing.Optional[typing.Optional[str]] = Field(None, alias='fax')

    email: typing.Optional[PatchedOptimizedVendorRequestEmail] = Field(None, alias='email')

    # Notes about the vendor
    comments: typing.Optional[typing.Optional[str]] = Field(None, alias='comments')

    # Contact person of the vendor
    contact: typing.Optional[typing.Optional[str]] = Field(None, alias='contact')

    # Website of the vendor
    url: typing.Optional[typing.Optional[str]] = Field(None, alias='url')

    # External id of the vendor
    external_id: typing.Optional[typing.Optional[str]] = Field(None, alias='external_id')

    currency: typing.Optional[typing.Optional[int]] = Field(None, alias='currency')

    payment_term_ref: typing.Optional[PaymentTermRequestNullable] = Field(None, alias='payment_term_ref')

    shipping_term_ref: typing.Optional[ShippingTermRequestNullable] = Field(None, alias='shipping_term_ref')

    payment_method_ref: typing.Optional[PaymentMethodRequestNullable] = Field(None, alias='payment_method_ref')

    shipping_method_ref: typing.Optional[ShippingMethodRequestNullable] = Field(None, alias='shipping_method_ref')

    tax: typing.Optional[typing.Optional[int]] = Field(None, alias='tax')

    type: typing.Optional[VendorTypeEnum] = Field(None, alias='type')

    default_payment_method: typing.Optional[typing.Optional[int]] = Field(None, alias='default_payment_method')

    is_1099_eligible: typing.Optional[typing.Optional[bool]] = Field(None, alias='is_1099_eligible')

    overall_score: typing.Optional[typing.Optional[str]] = Field(None, alias='overall_score')

    is_auto_email_po_enabled: typing.Optional[bool] = Field(None, alias='is_auto_email_po_enabled')

    # Placeholder for a KVStore value
    po_pdf_labels: typing.Optional[str] = Field(None, alias='po_pdf_labels')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
